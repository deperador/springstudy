<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"

       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context" xmlns:tx="http://www.springframework.org/schema/tx"
       xmlns:aop="http://www.springframework.org/schema/aop"

       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx.xsd http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop.xsd"

       default-lazy-init="false" default-autowire="byName">

    <!--加载配置文件-->
    <context:property-placeholder location="classpath*:/mybatis/mybatis.properties" ignore-unresolvable="true"/>

    <!--<bean id="dataSource" class="org.apache.commons.dbcp2.BasicDataSource" destroy-method="close">-->
        <!--<property name="driverClassName" value="${jdbc.driverClassName}"/>-->
        <!--<property name="url" value="${jdbc.url}"/>-->
        <!--<property name="username" value="${jdbc.username}"/>-->
        <!--<property name="password" value="${jdbc.password}"/>-->
    <!--</bean>-->

    <!--c3P0 配置-->
    <!--<bean id="dataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource" destroy-method="close">-->
        <!--<property name="driverClass" value="${jdbc.driverClassName}"/>-->
        <!--<property name="jdbcUrl" value="${jdbc.url}"/>-->
        <!--<property name="user" value="${jdbc.username}"/>-->
        <!--<property name="password" value="${jdbc.password}"/>-->
    <!--</bean>-->

    <!--2 配置C3P0数据源 -->
    <!--<bean id="datasource" class="com.mchange.v2.c3p0.ComboPooledDataSource" destroy-method="close">-->
        <!--&lt;!&ndash;驱动类名 &ndash;&gt;-->
        <!--<property name="driverClass" value="${jdbc.driver}" />-->
        <!--&lt;!&ndash; url &ndash;&gt;-->
        <!--<property name="jdbcUrl" value="${jdbc.url}" />-->
        <!--&lt;!&ndash; 用户名 &ndash;&gt;-->
        <!--<property name="user" value="${jdbc.uid}" />-->
        <!--&lt;!&ndash; 密码 &ndash;&gt;-->
        <!--<property name="password" value="${jdbc.pwd}" />-->
        <!--&lt;!&ndash; 当连接池中的连接耗尽的时候c3p0一次同时获取的连接数  &ndash;&gt;-->
        <!--<property name="acquireIncrement" value="5"></property>-->
        <!--&lt;!&ndash; 初始连接池大小 &ndash;&gt;-->
        <!--<property name="initialPoolSize" value="10"></property>-->
        <!--&lt;!&ndash; 连接池中连接最小个数 &ndash;&gt;-->
        <!--<property name="minPoolSize" value="5"></property>-->
        <!--&lt;!&ndash; 连接池中连接最大个数 &ndash;&gt;-->
        <!--<property name="maxPoolSize" value="20"></property>-->
    <!--</bean>-->

    <!--spring声明式事务管理控制-->
    <!--事物配置-->
    <bean id="MybatisTxManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
        <property name="dataSource" ref="dataSource"></property>
    </bean>

    <!--方式一：通过配置配置事物-->
    <!--配置事务增强（如何管理事务，只读、读写...）
    <tx:advice id="txAdvice" transaction-manager="txManager">
        <tx:attributes>
            <tx:method name="*save*" read-only="false"/>
            <tx:method name="get*" read-only="true"/>
        </tx:attributes>
    </tx:advice>
    -->
    <!--aop配置，拦截哪些方法（切入点表达式，拦截上面的事务增强）
    <aop:config>
        <aop:pointcut id="pt" expression="execution(* com.azxx.demon.service*.*(..))"/>
        <aop:advisor advice-ref="txAdvice" pointcut-ref="pt"/>
    </aop:config>
    -->
    <!--方式二：通过注解配置事物-->
    <!--注解方式实现事务-->
    <tx:annotation-driven transaction-manager="txManager"/>

    <!--3 会话工厂bean sqlSessionFactoryBean -->
    <bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
        <!-- 数据源 -->
        <property name="dataSource" ref="dataSource"></property>
        <!-- 别名 -->
        <property name="typeAliasesPackage" value="com.zhangguo.bookstore.entities"></property>
        <!-- sql映射文件路径 -->
        <property name="mapperLocations" value="classpath*:com/zhangguo/bookstore/mapper/*Mapper.xml"></property>
    </bean>

    <!--4 自动扫描对象关系映射 -->
    <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
        <!--指定会话工厂，如果当前上下文中只定义了一个则该属性可省去 -->
        <property name="sqlSessionFactoryBeanName" value="sqlSessionFactory"></property>
        <!-- 指定要自动扫描接口的基础包，实现接口 -->
        <property name="basePackage" value="com.zhangguo.bookstore.mapper"></property>
    </bean>

    <!--6 容器自动扫描IOC组件  -->
    <context:component-scan base-package="com.zhangguo.bookstore"></context:component-scan>
</beans>
